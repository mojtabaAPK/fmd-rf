GNU Tool Chain  

Linker command line:

--edf=C:\Program Files (x86)\FMD\Compiler\data\dat\en_msgs.txt -cs \
  -h+remote_receiver.sym --cmf=remote_receiver.cmf -z -QFT60F21X \
  -oC:\Users\PERSHI~1.GOL\AppData\Local\Temp\s1gc.2 -Mremote_receiver.map \
  -E1 -ver=XC8 -ASTACK=052h-06fh -pstack=STACK -ACODE=00h-03FFh \
  -ASTRCODE=00h-03FFh -ASTRING=00h-0FFhx4 -ACONST=00h-0FFhx4 \
  -AENTRY=00h-0FFhx4 -ACOMMON=070h-07Fh -ABANK0=040h-06Fh -ARAM=040h-06Fh \
  -AABS1=040h-07Fh -ASFR0=00h-03Fh -ASFR1=080h-0EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-07Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\PERSHI~1.GOL\AppData\Local\Temp\s1gc.obj \
  remote_receiver.obj 

Object code version is 3.11

Machine type is FT60F21X



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\PERSHI~1.GOL\AppData\Local\Temp\s1gc.obj
                end_init                              F        F        1        8       0
                reset_vec                             0        0        1        0       0
remote_receiver.obj
                cinit                                10       10        9        8       0
                functab                              19       19        8       32       0
                intentry                              4        4        B        8       0
                text7                               1CE      1CE       3B       42       0
                swtext1                             26B      26B        5      4D6       0
                text6                                21       21       F5       42       0
                text5                               22A      22A       18       42       0
                text4                               116      116       B8       42       0
                text3                               209      209       21       42       0
                text2                               25A      25A        9       42       0
                text1                               24F      24F        B       42       0
                maintext                            242      242        D       42       0
                cstackCOMMON                         70       70        C       70       1
                clrtext                             263      263        8       42       0
                bssBANK0                             40       40       12       40       1
                bssCOMMON                            7C       7C        2       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              F        F        1         0
                cinit                                10       10        9         0
                intentry                              4        4        B         0
                reset_vec                             0        0        1         0
                text7                               1CE      1CE       3B         0
                text6                                21       21       F5         0
                text5                               22A      22A       18         0
                text4                               116      116       B8         0
                text3                               209      209       21         0
                text2                               25A      25A        9         0
                text1                               24F      24F        B         0
                maintext                            242      242        D         0
                clrtext                             263      263        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          
                swtext1                             26B      26B        5         0

        CLASS   ENTRY          
                functab                              19       19        8         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                bssCOMMON                            7C       7C        2         1

        CLASS   BANK0          
                bssBANK0                             40       40       12         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000015  000019         8       0  CODE        2
                functab                        000019  000008  000021        32       0  ENTRY       2
                bssBANK0                       000040  000012  000052        40       1  BANK0       1
                text6                          000021  00024A  00026B        42       0  CODE        2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                swtext1                        00026B  000005  000270       4D6       0  CONST       2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            052-06F            1E           1
        CODE             001-003             3           2
                         270-3FF           190
        CONFIG           2007-2007             1           2
        CONST            001-003             3           2
                         270-3FF            90
        EEDATA           2100-217F            80           2
        ENTRY            001-003             3           2
                         270-3FF            90
        IDLOC            2000-2003             4           2
        RAM              052-06F            1E           1
        SFR0             000-03F            40           1
        SFR1             080-0EF            70           1
        STACK            052-06F            1E           1
        STRCODE          001-003             3           2
                         270-3FF           190
        STRING           001-003             3           2
                         270-3FF            90

                                  Symbol Table

PL10                               text4        1B5
PL12                               text4        1BD
PL14                               text6        101
PL16                               text6        108
PL18                               text4        1C4
PL2                                text6        0EE
PL20                               text4        1CA
PL22                               text6        10C
PL24                               text6        111
PL4                                text6        0F6
PL6                                text7        202
PL8                                text4        1AC
_GIE                               (abs)        05F
_IOCA4                             (abs)        4B4
_ISR                               text3        209
_OSCCON                            (abs)        08F
_PA3                               (abs)        02B
_PA4                               (abs)        02C
_PA4_Level_Change_INITIAL          text2        25A
_PAIE                              (abs)        05B
_PAIF                              (abs)        058
_PS0                               (abs)        408
_PS1                               (abs)        409
_PS2                               (abs)        40A
_PSA                               (abs)        40B
_T0CS                              (abs)        40D
_T0IE                              (abs)        05D
_T0IF                              (abs)        05A
_TMR0                              (abs)        001
_TRISA3                            (abs)        42B
_TRISA4                            (abs)        42C
_WPUA4                             (abs)        4AC
__Habs1                            abs1         000
__Hbank0                           bank0        000
__Hbank1                           bank1        000
__HbssBANK0                        bssBANK0     000
__HbssCOMMON                       bssCOMMON    000
__Hcinit                           cinit        019
__Hclrtext                         clrtext      000
__Hcode                            code         000
__Hcommon                          common       000
__Hconfig                          config       000
__HcstackBANK0                     cstackBANK0  000
__HcstackCOMMON                    cstackCOMMON 000
__Heeprom_data                     eeprom_data  000
__Hend_init                        end_init     010
__Hfunctab                         functab      021
__Hidloc                           idloc        000
__Hinit                            init         00F
__Hintentry                        intentry     00F
__Hmaintext                        maintext     000
__Hpa_nodes0                       pa_nodes0    000
__Hpowerup                         powerup      000
__Hram                             ram          000
__Hreset_vec                       reset_vec    001
__Hsfr0                            sfr0         000
__Hsfr1                            sfr1         000
__Hspace_0                         (abs)        270
__Hspace_1                         (abs)        07E
__Hspace_2                         (abs)        000
__Hspace_3                         (abs)        000
__Hstack                           stack        000
__Hstrings                         strings      000
__Htext                            text         000
__Labs1                            abs1         000
__Lbank0                           bank0        000
__Lbank1                           bank1        000
__LbssBANK0                        bssBANK0     000
__LbssCOMMON                       bssCOMMON    000
__Lcinit                           cinit        010
__Lclrtext                         clrtext      000
__Lcode                            code         000
__Lcommon                          common       000
__Lconfig                          config       000
__LcstackBANK0                     cstackBANK0  000
__LcstackCOMMON                    cstackCOMMON 000
__Leeprom_data                     eeprom_data  000
__Lend_init                        end_init     00F
__Lfunctab                         functab      019
__Lidloc                           idloc        000
__Linit                            init         00F
__Lintentry                        intentry     004
__Lmaintext                        maintext     000
__Lpa_nodes0                       pa_nodes0    000
__Lpowerup                         powerup      000
__Lram                             ram          000
__Lreset_vec                       reset_vec    000
__Lsfr0                            sfr0         000
__Lsfr1                            sfr1         000
__Lspace_0                         (abs)        000
__Lspace_1                         (abs)        000
__Lspace_2                         (abs)        000
__Lspace_3                         (abs)        000
__Lstack                           stack        000
__Lstrings                         strings      000
__Ltext                            text         000
__S0                               (abs)        270
__S1                               (abs)        07E
__S2                               (abs)        000
__S3                               (abs)        000
___int_sp                          stack        000
___latbits                         (abs)        000
___sp                              stack        000
__end_ofPL10                       text4        1BD
__end_ofPL12                       text4        1C4
__end_ofPL14                       text6        108
__end_ofPL16                       text6        10C
__end_ofPL18                       text4        1CA
__end_ofPL2                        text6        0F6
__end_ofPL20                       text4        1CE
__end_ofPL22                       text6        111
__end_ofPL24                       text6        116
__end_ofPL4                        text6        101
__end_ofPL6                        text7        209
__end_ofPL8                        text4        1B5
__end_of_ISR                       text3        22A
__end_of_PA4_Level_Change_INITIAL  text2        263
__end_of__i1fptable                functab      021
__end_of__initialization           cinit        017
__end_of_main                      maintext     24F
__end_of_on_rc_receive             text5        242
__end_of_rc_update_port            text6        0EE
__end_of_rc_update_time            text4        1AC
__end_of_shift_bit                 text7        202
__end_of_t0_init                   text1        25A
__i1fptable                        functab      01A
__initialization                   cinit        010
__pbssBANK0                        bssBANK0     040
__pbssCOMMON                       bssCOMMON    07C
__pcstackBANK0                     cstackBANK0  000
__pcstackCOMMON                    cstackCOMMON 070
__pfunctab                         functab      019
__pintentry                        intentry     004
__pmaintext                        maintext     242
__pswtext1                         swtext1      26B
__ptext0                           text0        000
__ptext1                           text1        24F
__ptext2                           text2        25A
__ptext3                           text3        209
__ptext4                           text4        116
__ptext5                           text5        22A
__ptext6                           text6        021
__ptext7                           text7        1CE
__size_of_ISR                      (abs)        000
__size_of_PA4_Level_Change_INITIAL (abs)        000
__size_of__i1fptable               (abs)        000
__size_of_main                     (abs)        000
__size_of_on_rc_receive            (abs)        000
__size_of_rc_update_port           (abs)        000
__size_of_rc_update_time           (abs)        000
__size_of_shift_bit                (abs)        000
__size_of_t0_init                  (abs)        000
_a                                 bssCOMMON    07D
_b                                 bssCOMMON    07C
_c                                 bssBANK0     040
_main                              maintext     242
_nPAPU                             (abs)        40F
_on_rc_receive                     text5        22A
_rc                                bssBANK0     041
_rc_update_port                    text6        021
_rc_update_time                    text4        116
_shift_bit                         text7        1CE
_t0_init                           text1        24F
btemp                              (abs)        07E
clear_ram0                         clrtext      263
end_of_initialization              cinit        017
fpbase                             (abs)        000
fptable                            functab      019
fptotal                            (abs)        000
i1fpbase                           functab      01F
i1fptable                          functab      01A
i1fptotal                          (abs)        002
interrupt_function                 intentry     004
intlevel0                          functab      019
intlevel1                          functab      019
intlevel2                          functab      019
intlevel3                          functab      019
intlevel4                          functab      019
intlevel5                          functab      019
on_rc_receive@name                 cstackCOMMON 070
rc_update_port@logic               cstackCOMMON 073
rc_update_port@rc                  cstackCOMMON 077
rc_update_time@rc                  cstackCOMMON 073
reset_vec                          reset_vec    000
saved_w                            (abs)        07E
shift_bit@bt                       cstackCOMMON 070
shift_bit@rc                       cstackCOMMON 072
stackhi                            (abs)        000
stacklo                            (abs)        000
start                              init         00F
start_initialization               cinit        010
wtemp0                             (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 105 in file "remote_receiver.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  703[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_PA4_Level_Change_INITIAL
		_t0_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _t0_init *****************
 Defined at:
		line 51 in file "remote_receiver.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PA4_Level_Change_INITIAL *****************
 Defined at:
		line 40 in file "remote_receiver.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 65 in file "remote_receiver.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          4       0
      Totals:         4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_rc_update_port
		_rc_update_time
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _rc_update_time *****************
 Defined at:
		line 184 in file "lib\rcSW.c"
 Parameters:    Size  Location     Type
  rc              1    wreg     PTR struct .
		 -> rc(17), 
 Auto vars:     Size  Location     Type
  rc              1    3[COMMON] PTR struct .
		 -> rc(17), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         1       0
      Temps:          2       0
      Totals:         3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_on_rc_receive
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _on_rc_receive *****************
 Defined at:
		line 83 in file "remote_receiver.C"
 Parameters:    Size  Location     Type
  name            1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         1       0
      Locals:         0       0
      Temps:          0       0
      Totals:         1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_rc_update_time
 This function uses a non-reentrant model


 *************** function _rc_update_port *****************
 Defined at:
		line 37 in file "lib\rcSW.c"
 Parameters:    Size  Location     Type
  rc              1    wreg     PTR struct .
		 -> rc(17), 
  logic           2    3[COMMON] int 
 Auto vars:     Size  Location     Type
  rc              1    7[COMMON] PTR struct .
		 -> rc(17), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         2       0
      Locals:         1       0
      Temps:          2       0
      Totals:         5       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_shift_bit
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _shift_bit *****************
 Defined at:
		line 258 in file "lib\rcSW.c"
 Parameters:    Size  Location     Type
  rc              1    wreg     PTR struct .
		 -> rc(17), 
  bt              1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  rc              1    2[COMMON] PTR struct .
		 -> rc(17), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         1       0
      Locals:         1       0
      Temps:          1       0
      Totals:         3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rc_update_port
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
lib\rcSW.c
		_rc_update_time		CODE           	0116	0000	151
		_rc_update_port		CODE           	0021	0000	206
		_shift_bit     		CODE           	01CE	0000	53

lib\rcSW.c estimated size: 410

remote_receiver.C
		_ISR           		CODE           	0209	0000	34
		_main          		CODE           	0242	0000	14
		_t0_init       		CODE           	024F	0000	12
		_PA4_Level_Change_INITIAL		CODE           	025A	0000	10
		_on_rc_receive 		CODE           	022A	0000	25

remote_receiver.C estimated size: 95

shared
		PL12           		CODE           	01BD	0000	8
		PL8            		CODE           	01AC	0000	10
		PL22           		CODE           	010C	0000	6
		PL14           		CODE           	0101	0000	8
		PL24           		CODE           	0111	0000	6
		__i1fptable    		ENTRY          	001A	0000	8
		PL16           		CODE           	0108	0000	5
		PL18           		CODE           	01C4	0000	7
		__initialization		CODE           	0010	0000	8
		PL2            		CODE           	00EE	0000	9
		PL10           		CODE           	01B5	0000	9
		PL4            		CODE           	00F6	0000	12
		PL20           		CODE           	01CA	0000	5
		PL6            		CODE           	0202	0000	8

shared estimated size: 109

